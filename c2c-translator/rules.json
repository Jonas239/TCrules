{
    "local_variable_declaration": [
        [
            "type name = value;\n",
            "type name = value;\n",
            "name = value\n"
        ],
        [
            "type name = name operator value;\n",
            "type name = name operator value;\n",
            "name = name operator value\n"
        ],
        [
            "type name = name operator name;\n",
            "type name = name operator name;\n",
            "name = name operator name\n"
        ],
        [
            "type name = value operator value;\n",
            "type name = value operator value;\n",
            "name = value operator value\n"
        ],
        [
            "type name = 'name';\n",
            "type name = 'name';\n",
            "name = 'name'\n"
        ],
        [
            "&&",
            "System.out.println(@);\n",
            "print(@)\n"
        ]
    ],
    "expression_statement": [
        [
            "type name = value;\n",
            "type name = value;\n",
            "name = value\n"
        ],
        [
            "name = value;\n",
            "name = value;\n",
            "name = value\n"
        ],
        [
            "type name = 'name';\n",
            "type name = 'name';\n",
            "name = 'name'\n"
        ],
        [
            "name = name operator value;\n",
            "name = name operator value;\n",
            "name = name operator value\n"
        ],
        [
            "type name = name operator value;\n",
            "type name = name operator value;\n",
            "name = name operator value\n"
        ],
        [
            "name = name operator name;\n",
            "name = name operator name;\n",
            "name = name operator name\n"
        ],
        [
            "type name = name operator name;\n",
            "type name = name operator name;\n",
            "name = name operator name\n"
        ],
        [
            "type name = value operator value;\n",
            "type name = value operator value;\n",
            "name = value operator value\n"
        ],
        [
            "name = value operator value;\n",
            "name = value operator value;\n",
            "name = value operator value\n"
        ],
        [
            "name = operatorname;\n",
            "name = operatorname;\n",
            "operatorname\n"
        ],
        [
            "name operator name;\n",
            "name operator name;\n",
            "name operator name\n"
        ],
        [
            "std::cout<<@;\n",
            "System.out.println(@);\n",
            "print(@)\n"
        ],
        [
            "name = name operator name operator name;\n",
            "name = name operator name operator name;\n",
            "name = name operator name operator name\n"
        ],
        [
            "#name operatornameoperator\n",
            "name name name {\n",
            "print(@)\n"
        ],
        [
            "&&",
            "System.out.println(@);\n",
            "print(@)\n"
        ],
        [
            "while",
            "System.out.println(@);\n",
            "if @:\n    @"
        ],
        [
            "if (@) {\n    @\n}\n",
            "System.out.println(@);\n",
            "print(@)\n"
        ]
    ],
    "if_statement": [
        [
            "if (@) {\n    @\n}\n",
            "if (@) {\n    @\n}\n",
            "if @:\n    @\n"
        ],
        [
            "if (@) {\n    @\n} else {\n    @\n}\n",
            "if (@) {\n    @\n} else {\n    @\n}\n",
            "if @:\n    @\nelse:\n    @\n"
        ],
        [
            "while",
            "System.out.println(@);\n",
            "if @:\n    @"
        ]
    ],
    "while_statement": [
        [
            "while (@) {\n    @\n}\n",
            "while (@) {\n    @\n}\n",
            "while @:\n    @\n"
        ]
    ],
    "function_definition": [
        "public type name(@) {\n    @\n}\n",
        "type name(@) {\n    @\n}\n",
        "def name(@):\n   @\n",
        [
            "type sum_two_numbers(type a, type b){\n",
            "name name name {\n",
            "name sum_two_numbers(a, b):\n"
        ]
    ],
    "class_declaration": [
        [
            "#name operatornameoperator\n",
            "name name name {\n",
            "print(@)\n"
        ],
        [
            "type sum_two_numbers(type a, type b){\n",
            "name name name {\n",
            "name sum_two_numbers(a, b):\n"
        ]
    ],
    "break_statement": [
        [
            "    \tname::nameoperatoroperatornameoperatoroperatorname::endl;\n",
            "          name operator value;\n",
            "        name\n"
        ]
    ],
    "for_statement": [
        [
            "#name operatornameoperator\n",
            "name name name {\n",
            "for"
        ]
    ]
}